{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects-JS\\\\drawing-board\\\\drawing-board\\\\src\\\\components\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useImperativeHandle, forwardRef } from 'react';\nimport { fabric } from 'fabric';\nimport io from 'socket.io-client';\n\n// Update the component to use forwardRef\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(({\n  roomId,\n  brushColor,\n  brushSize\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const fabricCanvasRef = useRef(null); // To store the Fabric.js canvas instance\n  const socketRef = useRef(null);\n\n  ////////////////// Expose clearCanvas method to parent via ref\n  useImperativeHandle(ref, () => ({\n    clearCanvas: () => {\n      var _fabricCanvasRef$curr;\n      console.log('Clear canvas called');\n      (_fabricCanvasRef$curr = fabricCanvasRef.current) === null || _fabricCanvasRef$curr === void 0 ? void 0 : _fabricCanvasRef$curr.clear();\n      // Optionally, broadcast the clear action if needed\n      socketRef.current.emit('clearCanvas', {\n        roomId\n      });\n    }\n  }));\n  useEffect(() => {\n    socketRef.current = io('http://localhost:3001');\n    fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\n      isDrawingMode: true\n    });\n    const canvas = fabricCanvasRef.current;\n    canvas.freeDrawingBrush.color = brushColor;\n    canvas.freeDrawingBrush.width = brushSize;\n    const broadcastDrawing = options => {\n      const data = options.path.toObject();\n      socketRef.current.emit('drawing', {\n        roomId,\n        data\n      });\n    };\n    const receiveDrawing = ({\n      data\n    }) => {\n      const path = new fabric.Path(data.path);\n      path.set({\n        selectable: false,\n        evented: false\n      });\n      canvas.add(path);\n    };\n    canvas.on('path:created', broadcastDrawing);\n    socketRef.current.on('drawing', drawingData => {\n      if (drawingData.roomId === roomId) {\n        receiveDrawing(drawingData);\n      }\n    });\n\n    // Listen for clearCanvas events from the server\n    socketRef.current.on('clearCanvas', ({\n      roomId: incomingRoomId\n    }) => {\n      if (incomingRoomId === roomId) {\n        canvas.clear();\n      }\n    });\n    return () => {\n      canvas.off('path:created', broadcastDrawing);\n      socketRef.current.off('drawing');\n      socketRef.current.off('clearCanvas');\n      canvas.dispose();\n    };\n  }, []);\n\n  // Update brush color\n\n  useEffect(() => {\n    if (fabricCanvasRef.current) {\n      fabricCanvasRef.current.freeDrawingBrush.color = brushColor;\n      console.log('Updating brush color to', brushColor);\n    }\n  }, [brushColor]); // Dependency on brushColor\n\n  // Update brush size\n  useEffect(() => {\n    if (fabricCanvasRef.current) {\n      fabricCanvasRef.current.freeDrawingBrush.width = brushSize;\n      console.log('Updating brush size to', brushSize);\n    }\n  }, [brushSize]); // Dependency on brushSize\n\n  // Resizing the canvas\n  useEffect(() => {\n    const resizeCanvas = () => {\n      if (fabricCanvasRef.current) {\n        fabricCanvasRef.current.setHeight(window.innerHeight);\n        fabricCanvasRef.current.setWidth(window.innerWidth);\n        fabricCanvasRef.current.renderAll();\n      }\n    };\n    window.addEventListener('resize', resizeCanvas);\n    resizeCanvas();\n    return () => window.removeEventListener('resize', resizeCanvas);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    id: \"main-canvas\",\n    width: window.innerWidth,\n    height: window.innerHeight\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n}, \"dt81BYXwDH8iGghpNDiCUnLxhnI=\")), \"dt81BYXwDH8iGghpNDiCUnLxhnI=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useImperativeHandle","forwardRef","fabric","io","jsxDEV","_jsxDEV","Canvas","_s","_c","roomId","brushColor","brushSize","ref","canvasRef","fabricCanvasRef","socketRef","clearCanvas","_fabricCanvasRef$curr","console","log","current","clear","emit","isDrawingMode","canvas","freeDrawingBrush","color","width","broadcastDrawing","options","data","path","toObject","receiveDrawing","Path","set","selectable","evented","add","on","drawingData","incomingRoomId","off","dispose","resizeCanvas","setHeight","window","innerHeight","setWidth","innerWidth","renderAll","addEventListener","removeEventListener","id","height","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/projects-JS/drawing-board/drawing-board/src/components/Canvas.js"],"sourcesContent":["import React, { useEffect, useRef, useImperativeHandle, forwardRef } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport io from 'socket.io-client';\r\n\r\n// Update the component to use forwardRef\r\nconst Canvas = forwardRef(({ roomId, brushColor, brushSize }, ref) => {\r\n  const canvasRef = useRef(null);\r\n  const fabricCanvasRef = useRef(null); // To store the Fabric.js canvas instance\r\n  const socketRef = useRef(null);\r\n\r\n  ////////////////// Expose clearCanvas method to parent via ref\r\n  useImperativeHandle(ref, () => ({\r\n    clearCanvas: () => {\r\n      console.log('Clear canvas called');\r\n      fabricCanvasRef.current?.clear();\r\n      // Optionally, broadcast the clear action if needed\r\n      socketRef.current.emit('clearCanvas', { roomId });\r\n    }\r\n  }));\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io('http://localhost:3001');\r\n    fabricCanvasRef.current = new fabric.Canvas(canvasRef.current, {\r\n      isDrawingMode: true,\r\n    });\r\n\r\n\r\n    const canvas = fabricCanvasRef.current;\r\n    canvas.freeDrawingBrush.color = brushColor;\r\n    canvas.freeDrawingBrush.width = brushSize;\r\n\r\n    const broadcastDrawing = (options) => {\r\n      const data = options.path.toObject();\r\n      socketRef.current.emit('drawing', { roomId, data });\r\n    };\r\n\r\n    const receiveDrawing = ({ data }) => {\r\n      const path = new fabric.Path(data.path);\r\n      path.set({ selectable: false, evented: false });\r\n      canvas.add(path);\r\n    };\r\n\r\n    canvas.on('path:created', broadcastDrawing);\r\n\r\n    socketRef.current.on('drawing', (drawingData) => {\r\n      if (drawingData.roomId === roomId) {\r\n        receiveDrawing(drawingData);\r\n      }\r\n    });\r\n\r\n    // Listen for clearCanvas events from the server\r\n    socketRef.current.on('clearCanvas', ({ roomId: incomingRoomId }) => {\r\n      if (incomingRoomId === roomId) {\r\n        canvas.clear();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      canvas.off('path:created', broadcastDrawing);\r\n      socketRef.current.off('drawing');\r\n      socketRef.current.off('clearCanvas');\r\n      canvas.dispose();\r\n    };\r\n  }, []);\r\n\r\n  // Update brush color\r\n\r\nuseEffect(() => {\r\n    if (fabricCanvasRef.current) {\r\n      fabricCanvasRef.current.freeDrawingBrush.color = brushColor;\r\n      console.log('Updating brush color to', brushColor);\r\n    }\r\n  }, [brushColor]); // Dependency on brushColor\r\n  \r\n  // Update brush size\r\n  useEffect(() => {\r\n    if (fabricCanvasRef.current) {\r\n      fabricCanvasRef.current.freeDrawingBrush.width = brushSize;\r\n      console.log('Updating brush size to', brushSize);\r\n    }\r\n  }, [brushSize]); // Dependency on brushSize\r\n\r\n  // Resizing the canvas\r\n  useEffect(() => {\r\n    const resizeCanvas = () => {\r\n      if (fabricCanvasRef.current) {\r\n        fabricCanvasRef.current.setHeight(window.innerHeight);\r\n        fabricCanvasRef.current.setWidth(window.innerWidth);\r\n        fabricCanvasRef.current.renderAll();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', resizeCanvas);\r\n    resizeCanvas();\r\n\r\n    return () => window.removeEventListener('resize', resizeCanvas);\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} id=\"main-canvas\" width={window.innerWidth} height={window.innerHeight} />;\r\n});\r\n\r\nexport default Canvas;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}